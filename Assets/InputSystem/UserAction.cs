//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem/UserAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UserAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UserAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UserAction"",
    ""maps"": [
        {
            ""name"": ""SkillButton"",
            ""id"": ""0bddb92d-2983-44fd-bba5-c6c50a76f741"",
            ""actions"": [
                {
                    ""name"": ""SkillButton1"",
                    ""type"": ""Value"",
                    ""id"": ""a90f4c17-ae89-4ee9-9a60-a788fbb2d107"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SkillButton2"",
                    ""type"": ""Button"",
                    ""id"": ""9001e098-b539-4f4b-927f-ea1bb9d2b901"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton3"",
                    ""type"": ""Button"",
                    ""id"": ""b99b5243-a758-4c85-b24b-f8ebf31028ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton4"",
                    ""type"": ""Button"",
                    ""id"": ""f4d3e056-3dda-4651-8aa9-931ceadcb025"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillButton5"",
                    ""type"": ""Button"",
                    ""id"": ""35fa1e34-6bcf-476b-9569-bc676b5448aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""67d80229-6c8e-4757-bc15-96312fe548a9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17405243-a7a5-4121-b65d-7c61655dcf01"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a7afa81-ebd9-4c6f-b615-be4b808c4167"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e65af30-26e2-4c5d-a2cd-a0b53f80d849"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ccbcde4-7795-48e7-a003-0911ac5feb4e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillButton5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InterfaceCall"",
            ""id"": ""e672213a-16a8-4ec4-b212-ff3fd6cbe1ec"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""6636e526-0e68-4a50-bc02-d978002c4c01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4b7b761d-f5ab-4df6-a43a-7665df92959b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // SkillButton
        m_SkillButton = asset.FindActionMap("SkillButton", throwIfNotFound: true);
        m_SkillButton_SkillButton1 = m_SkillButton.FindAction("SkillButton1", throwIfNotFound: true);
        m_SkillButton_SkillButton2 = m_SkillButton.FindAction("SkillButton2", throwIfNotFound: true);
        m_SkillButton_SkillButton3 = m_SkillButton.FindAction("SkillButton3", throwIfNotFound: true);
        m_SkillButton_SkillButton4 = m_SkillButton.FindAction("SkillButton4", throwIfNotFound: true);
        m_SkillButton_SkillButton5 = m_SkillButton.FindAction("SkillButton5", throwIfNotFound: true);
        // InterfaceCall
        m_InterfaceCall = asset.FindActionMap("InterfaceCall", throwIfNotFound: true);
        m_InterfaceCall_Newaction = m_InterfaceCall.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // SkillButton
    private readonly InputActionMap m_SkillButton;
    private ISkillButtonActions m_SkillButtonActionsCallbackInterface;
    private readonly InputAction m_SkillButton_SkillButton1;
    private readonly InputAction m_SkillButton_SkillButton2;
    private readonly InputAction m_SkillButton_SkillButton3;
    private readonly InputAction m_SkillButton_SkillButton4;
    private readonly InputAction m_SkillButton_SkillButton5;
    public struct SkillButtonActions
    {
        private @UserAction m_Wrapper;
        public SkillButtonActions(@UserAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @SkillButton1 => m_Wrapper.m_SkillButton_SkillButton1;
        public InputAction @SkillButton2 => m_Wrapper.m_SkillButton_SkillButton2;
        public InputAction @SkillButton3 => m_Wrapper.m_SkillButton_SkillButton3;
        public InputAction @SkillButton4 => m_Wrapper.m_SkillButton_SkillButton4;
        public InputAction @SkillButton5 => m_Wrapper.m_SkillButton_SkillButton5;
        public InputActionMap Get() { return m_Wrapper.m_SkillButton; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SkillButtonActions set) { return set.Get(); }
        public void SetCallbacks(ISkillButtonActions instance)
        {
            if (m_Wrapper.m_SkillButtonActionsCallbackInterface != null)
            {
                @SkillButton1.started -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton1;
                @SkillButton1.performed -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton1;
                @SkillButton1.canceled -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton1;
                @SkillButton2.started -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton2;
                @SkillButton2.performed -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton2;
                @SkillButton2.canceled -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton2;
                @SkillButton3.started -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton3;
                @SkillButton3.performed -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton3;
                @SkillButton3.canceled -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton3;
                @SkillButton4.started -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton4;
                @SkillButton4.performed -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton4;
                @SkillButton4.canceled -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton4;
                @SkillButton5.started -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton5;
                @SkillButton5.performed -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton5;
                @SkillButton5.canceled -= m_Wrapper.m_SkillButtonActionsCallbackInterface.OnSkillButton5;
            }
            m_Wrapper.m_SkillButtonActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SkillButton1.started += instance.OnSkillButton1;
                @SkillButton1.performed += instance.OnSkillButton1;
                @SkillButton1.canceled += instance.OnSkillButton1;
                @SkillButton2.started += instance.OnSkillButton2;
                @SkillButton2.performed += instance.OnSkillButton2;
                @SkillButton2.canceled += instance.OnSkillButton2;
                @SkillButton3.started += instance.OnSkillButton3;
                @SkillButton3.performed += instance.OnSkillButton3;
                @SkillButton3.canceled += instance.OnSkillButton3;
                @SkillButton4.started += instance.OnSkillButton4;
                @SkillButton4.performed += instance.OnSkillButton4;
                @SkillButton4.canceled += instance.OnSkillButton4;
                @SkillButton5.started += instance.OnSkillButton5;
                @SkillButton5.performed += instance.OnSkillButton5;
                @SkillButton5.canceled += instance.OnSkillButton5;
            }
        }
    }
    public SkillButtonActions @SkillButton => new SkillButtonActions(this);

    // InterfaceCall
    private readonly InputActionMap m_InterfaceCall;
    private IInterfaceCallActions m_InterfaceCallActionsCallbackInterface;
    private readonly InputAction m_InterfaceCall_Newaction;
    public struct InterfaceCallActions
    {
        private @UserAction m_Wrapper;
        public InterfaceCallActions(@UserAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_InterfaceCall_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_InterfaceCall; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InterfaceCallActions set) { return set.Get(); }
        public void SetCallbacks(IInterfaceCallActions instance)
        {
            if (m_Wrapper.m_InterfaceCallActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_InterfaceCallActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_InterfaceCallActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_InterfaceCallActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_InterfaceCallActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public InterfaceCallActions @InterfaceCall => new InterfaceCallActions(this);
    public interface ISkillButtonActions
    {
        void OnSkillButton1(InputAction.CallbackContext context);
        void OnSkillButton2(InputAction.CallbackContext context);
        void OnSkillButton3(InputAction.CallbackContext context);
        void OnSkillButton4(InputAction.CallbackContext context);
        void OnSkillButton5(InputAction.CallbackContext context);
    }
    public interface IInterfaceCallActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
